{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","setcategories","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEfC,mBAAS,IAFM,mBAEzCC,EAFyC,KAE9BC,EAF8B,KAoB5C,OACI,0BACAC,SAbY,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAUd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAvBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,YA4B3BZ,EAAYe,UAAU,CAClBC,c,OAAcC,EAAUC,KAAKC,Y,2BCrCpBC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEmCC,UAAUH,GAF7C,uEAGKI,MAAMF,GAHX,cAGXG,EAHW,gBAIIA,EAAUC,OAJd,uBAIVC,EAJU,EAIVA,KAGDC,EAAMD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACvB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXxB,kBAeVM,GAfU,4CAAD,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCHDS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACbnB,mBAAS,CAClC0B,KAAK,GACLe,SAAQ,IAH8B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAhB,GACnBc,EAAS,CACJjB,KAAKG,EACLY,SAAQ,SAGnB,CAACtB,IAEIuB,EDXsBI,CAAa3B,GAA7Ba,EAFuB,EAE5BN,KAAYe,EAFgB,EAEhBA,QAGnB,OACI,oCACA,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAU,uBAAGJ,UAAU,oCAAb,cACX,yBAAKA,UAAU,+CAERL,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAkB,IAAKlB,EAAIC,IACLD,UEfVmB,EAAe,WAAM,MAGChD,mBAAS,CAAC,cAHX,mBAG3BiD,EAH2B,KAGhBlD,EAHgB,KAUlC,OACQ,oCACI,4CACA,kBAAC,EAAD,CACAA,cAAeA,IACf,6BACA,4BAEGkD,EAAWrB,KAAI,SAAAsB,GAAS,OACxB,kBAAC,EAAD,CACCH,IAAKG,EACL/B,SAAU+B,U,MChB1BC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.c9e1dadb.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\nconst [inputValue,setInputValue]=useState('');\r\n\r\nconst handleInputChange=(e)=>{\r\n    setInputValue(e.target.value);\r\n\r\n}\r\n\r\nconst handleSubmit= (e)=>{\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length>2){\r\n        setCategories(cats=>[inputValue,...cats]);\r\n        setInputValue('');\r\n    }\r\n   \r\n    \r\n}\r\n\r\n    return (\r\n        <form\r\n        onSubmit={handleSubmit}\r\n        >\r\n        <input \r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setcategories:PropTypes.func.isRequired\r\n}","export const getGifs=async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zl2smSFVs7uXApnzH6Swd2erEITr3HCO&lang=es`;\r\n    const respuesta=await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n\r\n    const gifs =data.map(img =>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n  \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n          <img src={url} alt={title}/>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading}=useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n        {loading &&<p className='animate__animated animate__flash'>Cargando..</p>}\r\n        <div className='card-grid animate__animated animate__fadeIn'>\r\n           {\r\n               images.map(img=>(\r\n                   <GifGridItem \r\n                   key={img.id} \r\n                   {...img}\r\n                   />     \r\n               ))\r\n               \r\n           }\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setstate] = useState({\r\n    data:[],\r\n    loading:true\r\n   });\r\n\r\n   useEffect(()=>{\r\n       getGifs(category).then(img=>{\r\n           setstate({\r\n                data:img,\r\n                loading:false\r\n             })\r\n    })\r\n   },[category]);\r\n\r\n   return state;\r\n}\r\n","import React ,{useState}from 'react'\r\nimport { AddCategory } from './componentes/AddCategory'\r\nimport { GifGrid } from './componentes/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n//const categorias =['One Punch','Samurai X','Dragon Ball'];\r\nconst [categorias,setCategories] = useState(['One Punch'])\r\n\r\n// const handleAdd=()=>{\r\n//   // setCategorias(['HunterXHunter',...categorias]);\r\n//    setCategorias(cats=>[...cats,'HunterXHunter']);\r\n// }\r\n\r\nreturn (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n            setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n               {\r\n               categorias.map(categoria=>(\r\n               <GifGrid  \r\n                key={categoria}\r\n                category={categoria}>\r\n                </GifGrid>))\r\n                 \r\n                 \r\n               }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\nimport 'animate.css';\n\n\n\nReactDOM.render( \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}